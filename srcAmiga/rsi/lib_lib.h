#ifndef _INCLUDE_RAYSTORMPPC_H
#define _INCLUDE_RAYSTORMPPC_H

/*
 * File generated by StormLink from SoftDisk:User/mcpp3/work/octree/rsi/lib.fd
 * DO NOT EDIT
 * $VER: raystormppc.library 2.3 (13-Jun-99)
 */
#ifdef __cplusplus
extern "C" {
#endif
#pragma amicall(RayStormBase, 0x1e, rsiSetCooperateCB())
#pragma amicall(RayStormBase, 0x24, rsiSetCheckCancelCB())
#pragma amicall(RayStormBase, 0x2a, rsiSetLogCB())
#pragma amicall(RayStormBase, 0x30, rsiSetUpdateStatusCB())
#pragma amicall(RayStormBase, 0x36, rsiInit())
#pragma amicall(RayStormBase, 0x3c, rsiExit())
#pragma amicall(RayStormBase, 0x42, rsiCreateContext())
#pragma amicall(RayStormBase, 0x48, rsiFreeContext())
#pragma amicall(RayStormBase, 0x4e, rsiSetUserData())
#pragma amicall(RayStormBase, 0x54, rsiGetUserData())
#pragma amicall(RayStormBase, 0x5a, rsiGetErrorMsg())
#pragma amicall(RayStormBase, 0x60, rsiCleanup())
#pragma amicall(RayStormBase, 0x66, rsiRender())
#pragma amicall(RayStormBase, 0x6c, rsiSetOctreeDepth())
#pragma amicall(RayStormBase, 0x72, rsiSetRenderField())
#pragma amicall(RayStormBase, 0x78, rsiSetAntialias())
#pragma amicall(RayStormBase, 0x7e, rsiSetDistribution())
#pragma amicall(RayStormBase, 0x84, rsiSetRandomJitter())
#pragma amicall(RayStormBase, 0x8a, rsiSetWorld())
#pragma amicall(RayStormBase, 0x90, rsiSetCamera())
#pragma amicall(RayStormBase, 0x96, rsiSetScreen())
#pragma amicall(RayStormBase, 0x9c, rsiSetBrushPath())
#pragma amicall(RayStormBase, 0xa2, rsiSetTexturePath())
#pragma amicall(RayStormBase, 0xa8, rsiSetObjectPath())
#pragma amicall(RayStormBase, 0xae, rsiSavePicture())
#pragma amicall(RayStormBase, 0xb4, rsiCreatePointLight())
#pragma amicall(RayStormBase, 0xba, rsiSetPointLight())
#pragma amicall(RayStormBase, 0xc0, rsiCreateSpotLight())
#pragma amicall(RayStormBase, 0xc6, rsiSetSpotLight())
#pragma amicall(RayStormBase, 0xcc, rsiCreateDirectionalLight())
#pragma amicall(RayStormBase, 0xd2, rsiSetDirectionalLight())
#pragma amicall(RayStormBase, 0xd8, rsiCreateFlare())
#pragma amicall(RayStormBase, 0xde, rsiSetFlare())
#pragma amicall(RayStormBase, 0xe4, rsiCreateStar())
#pragma amicall(RayStormBase, 0xea, rsiSetStar())
#pragma amicall(RayStormBase, 0xf0, rsiCreateSphere())
#pragma amicall(RayStormBase, 0xf6, rsiSetSphere())
#pragma amicall(RayStormBase, 0xfc, rsiCreateTriangle())
#pragma amicall(RayStormBase, 0x102, rsiCreateMesh())
#pragma amicall(RayStormBase, 0x108, rsiCreatePlane())
#pragma amicall(RayStormBase, 0x10e, rsiSetPlane())
#pragma amicall(RayStormBase, 0x114, rsiCreateCSG())
#pragma amicall(RayStormBase, 0x11a, rsiSetCSG())
#pragma amicall(RayStormBase, 0x120, rsiLoadObject())
#pragma amicall(RayStormBase, 0x126, rsiCreateBox())
#pragma amicall(RayStormBase, 0x12c, rsiSetBox())
#pragma amicall(RayStormBase, 0x132, rsiCreateCylinder())
#pragma amicall(RayStormBase, 0x138, rsiSetCylinder())
#pragma amicall(RayStormBase, 0x13e, rsiCreateSOR())
#pragma amicall(RayStormBase, 0x144, rsiSetSOR())
#pragma amicall(RayStormBase, 0x14a, rsiCreateCone())
#pragma amicall(RayStormBase, 0x150, rsiSetCone())
#pragma amicall(RayStormBase, 0x156, rsiCreateSurface())
#pragma amicall(RayStormBase, 0x15c, rsiSetSurface())
#pragma amicall(RayStormBase, 0x162, rsiAddImagineTexture())
#pragma amicall(RayStormBase, 0x168, rsiAddRayStormTexture())
#pragma amicall(RayStormBase, 0x16e, rsiSetTexture())
#pragma amicall(RayStormBase, 0x174, rsiAddHyperTexture())
#pragma amicall(RayStormBase, 0x17a, rsiSetHyperTexture())
#pragma amicall(RayStormBase, 0x180, rsiAddBrush())
#pragma amicall(RayStormBase, 0x186, rsiSetBrush())
#pragma amicall(RayStormBase, 0x18c, rsiCreateActor())
#pragma amicall(RayStormBase, 0x192, rsiSetActor())
#pragma amicall(RayStormBase, 0x198, rsiPosition())
#pragma amicall(RayStormBase, 0x19e, rsiAlignment())
#pragma amicall(RayStormBase, 0x1a4, rsiSize())
#pragma amicall(RayStormBase, 0x1aa, rsiGetLibInfo())
#ifdef __cplusplus
};
#endif
#endif
