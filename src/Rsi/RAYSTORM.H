#ifndef _INCLUDE_RAYSTORM_H
#define _INCLUDE_RAYSTORM_H

/*
 * File generated by StormLink from SoftDisk:User/mcpp3/work/octree/rsi/lib_stats.fd
 * DO NOT EDIT
 * $VER: raystorm.library 1.4 (21-Jan-97)
 */
#ifdef __cplusplus
extern "C" {
#endif
#pragma amicall(RayStormBase, 0x1E, rsiSetCooperateCB())
#pragma amicall(RayStormBase, 0x24, rsiSetCheckCancelCB())
#pragma amicall(RayStormBase, 0x2A, rsiSetLogCB())
#pragma amicall(RayStormBase, 0x30, rsiSetUpdateStatusCB())
#pragma amicall(RayStormBase, 0x36, rsiInit())
#pragma amicall(RayStormBase, 0x3C, rsiExit())
#pragma amicall(RayStormBase, 0x42, rsiGetErrorMsg())
#pragma amicall(RayStormBase, 0x48, rsiGetUser())
#pragma amicall(RayStormBase, 0x4E, rsiCleanup())
#pragma amicall(RayStormBase, 0x54, rsiRender())
#pragma amicall(RayStormBase, 0x5A, rsiSetOctreeDepth())
#pragma amicall(RayStormBase, 0x60, rsiSetRenderField())
#pragma amicall(RayStormBase, 0x66, rsiSetAntialias())
#pragma amicall(RayStormBase, 0x6C, rsiSetDistribution())
#pragma amicall(RayStormBase, 0x72, rsiSetRandomJitter())
#pragma amicall(RayStormBase, 0x78, rsiSetWorld())
#pragma amicall(RayStormBase, 0x7E, rsiSetCamera())
#pragma amicall(RayStormBase, 0x84, rsiSetScreen())
#pragma amicall(RayStormBase, 0x8A, rsiSetBrushPath())
#pragma amicall(RayStormBase, 0x90, rsiSetTexturePath())
#pragma amicall(RayStormBase, 0x96, rsiSetObjectPath())
#pragma amicall(RayStormBase, 0x9C, rsiSavePicture())
#pragma amicall(RayStormBase, 0xA2, rsiCreatePointLight())
#pragma amicall(RayStormBase, 0xA8, rsiSetPointLight())
#pragma amicall(RayStormBase, 0xAE, rsiCreateSpotLight())
#pragma amicall(RayStormBase, 0xB4, rsiSetSpotLight())
#pragma amicall(RayStormBase, 0xBA, rsiCreateFlare())
#pragma amicall(RayStormBase, 0xC0, rsiSetFlare())
#pragma amicall(RayStormBase, 0xC6, rsiCreateStar())
#pragma amicall(RayStormBase, 0xCC, rsiSetStar())
#pragma amicall(RayStormBase, 0xD2, rsiCreateSphere())
#pragma amicall(RayStormBase, 0xD8, rsiSetSphere())
#pragma amicall(RayStormBase, 0xDE, rsiCreateTriangle())
#pragma amicall(RayStormBase, 0xE4, rsiCreatePlane())
#pragma amicall(RayStormBase, 0xEA, rsiSetPlane())
#pragma amicall(RayStormBase, 0xF0, rsiCreateCSG())
#pragma amicall(RayStormBase, 0xF6, rsiSetCSG())
#pragma amicall(RayStormBase, 0xFC, rsiLoadObject())
#pragma amicall(RayStormBase, 0x102, rsiCreateBox())
#pragma amicall(RayStormBase, 0x108, rsiSetBox())
#pragma amicall(RayStormBase, 0x10E, rsiCreateSurface())
#pragma amicall(RayStormBase, 0x114, rsiSetSurface())
#pragma amicall(RayStormBase, 0x11A, rsiAddTexture())
#pragma amicall(RayStormBase, 0x120, rsiSetTexture())
#pragma amicall(RayStormBase, 0x126, rsiAddBrush())
#pragma amicall(RayStormBase, 0x12C, rsiSetBrush())
#pragma amicall(RayStormBase, 0x132, rsiCreateActor())
#pragma amicall(RayStormBase, 0x138, rsiSetActor())
#pragma amicall(RayStormBase, 0x13E, rsiPosition())
#pragma amicall(RayStormBase, 0x144, rsiAlignment())
#pragma amicall(RayStormBase, 0x14A, rsiSize())
#pragma amicall(RayStormBase, 0x150, rsiGetStats())
#pragma amicall(RayStormBase, 0x156, rsiGetStatDescription())
#ifdef __cplusplus
};
#endif
#endif
